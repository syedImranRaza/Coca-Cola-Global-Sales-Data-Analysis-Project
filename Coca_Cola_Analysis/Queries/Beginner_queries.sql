-- Total Sales: Calculate the total revenue generated from all sales.

SELECT 
    SUM(total_revenue) AS total_sales 
FROM 
    Sales;

-- Sales by Product: Analyze which products generate the most revenue.

SELECT 
    p.product_name, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY 
    p.product_name 
ORDER BY 
    total_revenue DESC;

-- Sales by Region: Determine which geographic regions perform best in terms of sales.

SELECT 
    r.region_name, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Region r ON s.region_id = r.region_id 
GROUP BY 
    r.region_name 
ORDER BY 
    total_revenue DESC;

-- Top Customers by Revenue: Identify key customers who contribute the most to the companyâ€™s revenue.

SELECT 
    c.customer_name, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Customer c ON s.customer_id = c.customer_id 
GROUP BY 
    c.customer_name 
ORDER BY 
    total_revenue DESC;

-- Revenue by Customer Type (Retail vs. Wholesale): Compare revenue generated by retail and wholesale customers.

SELECT 
    c.customer_type, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Customer c ON s.customer_id = c.customer_id 
GROUP BY 
    c.customer_type;

-- Customer Behavior: Identify the frequency of purchases by each customer (loyalty analysis).

SELECT 
    c.customer_name, 
    COUNT(s.sales_id) AS purchase_frequency 
FROM 
    Sales s 
JOIN Customer c ON s.customer_id = c.customer_id 
GROUP BY 
    c.customer_name 
ORDER BY 
    purchase_frequency DESC;

-- Most Popular Products by Sales Volume: Identify the best-selling products in terms of quantity sold.

SELECT 
    p.product_name, 
    SUM(s.quantity) AS total_quantity_sold 
FROM 
    Sales s 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY    
    p.product_name 
ORDER BY 
    total_quantity_sold DESC;


-- Revenue by Product Category: Analyze revenue contribution by product category (e.g., Soft Drink, etc.)

SELECT 
    p.category, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY 
    p.category 
ORDER BY 
    total_revenue DESC;

-- Sales by Month: Analyze seasonal trends by examining sales month over month

SELECT 
    TO_CHAR(s.date, 'Month') AS month, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
GROUP BY 
    TO_CHAR(s.date, 'Month') 
ORDER BY 
    month;


-- Year-to-Date (YTD) Sales: Track year-to-date sales and compare them with previous periods

SELECT 
    SUM(s.total_revenue) AS YTD_sales 
FROM 
    Sales s 
WHERE 
    s.date BETWEEN '2023-01-01' AND CURRENT_DATE;


-- Gross Profit by Product: Assume you have cost data, calculate gross profit (Revenue - Cost) by product.

SELECT 
    p.product_name, 
    SUM(s.total_revenue) - SUM(p.price * s.quantity) AS gross_profit 
FROM 
    Sales s 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY 
    p.product_name 
ORDER BY 
    gross_profit DESC;


-- Profit Margin by Region: Calculate profit margin for each region

SELECT 
    r.region_name, 
    SUM(s.total_revenue) - SUM(p.price * s.quantity) AS profit_margin 
FROM 
    Sales s 
JOIN Region r ON s.region_id = r.region_id 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY 
    r.region_name 
ORDER BY 
    profit_margin DESC;


-- Identify Sales Trends: Analyze the trend of sales over time to identify if there is an increasing or decreasing pattern.

SELECT 
    s.date, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
GROUP BY 
    s.date 
ORDER BY 
    s.date;


-- Market Share by Region: Calculate the market share of each region in terms of sales.

SELECT 
    r.region_name, 
    (SUM(s.total_revenue) / (SELECT SUM(total_revenue) FROM Sales)) * 100 AS market_share 
FROM 
    Sales s 
JOIN Region r ON s.region_id = r.region_id 
GROUP BY 
    r.region_name 
ORDER BY 
    market_share DESC;


-- Sales by Salesperson: Evaluate how much revenue each salesperson is bringing in.

SELECT 
    sp.salesperson_name, 
    SUM(s.total_revenue) AS total_revenue 
FROM 
    Sales s 
JOIN Salesperson sp ON s.region_id = sp.region_id 
GROUP BY 
    sp.salesperson_name 
ORDER BY 
    total_revenue DESC;



-- Commission-Based Sales: If salespeople earn a commission, calculate the commission earned based on their sales.

SELECT 
    sp.salesperson_name, 
    SUM(s.total_revenue) * 0.05 AS commission_earned 
FROM 
    Sales s 
JOIN Salesperson sp ON s.region_id = sp.region_id 
GROUP BY 
    sp.salesperson_name;


-- Customer Lifetime Value: Estimate the lifetime value of customers by analyzing their purchase frequency and total spending over time.

SELECT 
    c.customer_name, 
    SUM(s.total_revenue) AS lifetime_value 
FROM 
    Sales s 
JOIN Customer c ON s.customer_id = c.customer_id 
GROUP BY 
    c.customer_name 
ORDER BY 
    lifetime_value DESC;


-- Price vs. Quantity Sold: Measure how changes in product prices affect the quantity sold (elasticity).

SELECT 
    p.product_name, 
    p.price, SUM(s.quantity) AS total_quantity_sold 
FROM 
    Sales s 
JOIN Product p ON s.product_id = p.product_id 
GROUP BY 
    p.product_name, p.price;